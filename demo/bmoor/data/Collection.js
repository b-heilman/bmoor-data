;(function(){
/** bmoor-data v0.0.1 **/
bMoor.make("bmoor.data.Collection",["bmoor.defer.Group","bmoor.data.Eventable",function(t,n){"use strict";function o(){var t,n;for(bMoor.data.setUid(this),t=0,n=arguments.length;n>t;t++)this.$insert(arguments[t])}return{parent:Array,construct:o,extend:[new n],properties:{_canInsert:function(){return!0},_insert:function(t){bMoor.data.setUid(t),this.$trigger("insert",t)},_canRemove:function(){return!0},_remove:function(t){this.$trigger("remove",t)},concat:function(){var t,n,i=new o;for(i.$follow(this),t=0,n=arguments;n>t;t++)i.push(arguments[t]);return i},push:function(t){t instanceof o?this.$follow(t):this._canInsert(t)&&(Array.prototype.push.call(this,t),this._insert(t))},unshift:function(t){t instanceof o?this.$follow(t):this._canInsert(t)&&(Array.prototype.unshift.call(this,t),this._insert(t))},pop:function(){var t;return this._canRemove()&&(t=Array.prototype.pop.call(this),this._remove(t)),t},shift:function(){var t=Array.prototype.shift.call(this);return this._remove(t),t},slice:function(){var t,n,o=Array.prototype.slice.apply(this,arguments);for(t=0,n=o.length;n>t;t++)this.$remove(o[t]);return new Collection(o)},forEach:function(t,n){var o,i;for(o=0,i=this.length;i>o;o++)t.call(n||this,this[o],o)},$insert:function(t){this.push(t)},$remove:function(t){t instanceof o?this.$ignore(t):this._canRemove(t)&&(bMoor.array.remove(this,t),this._remove(t))},$watch:function(t,n){var o=this.$on("insert",t),i=this.$on("remove",n);return function(){o(),i()}},$follow:function(t){var n,i,r;if(t instanceof o&&(r=bMoor.data.getUid(t),this.$$following||(this.$$following={}),!this.$$following[r])){for(n=0,i=t.length;i>n;n++)this.$insert(t[n]);this.$$following[r]=t.$watch(this.$insert.bind(this),this.$remove.bind(this))}},$ignore:function(t){var n,i,r;if(t instanceof o&&(r=bMoor.data.getUid(t),this.$$following&&!this.$$following[r])){for(n=0,i=t.length;i>n;n++)this.$remove(t[n]);this.$$following[r](),this.$$following[r]=null}},$inflate:function(){var n=new t;return bMoor.loop(this,function(t,o){bMoor.isFunction(t.inflate)&&n.add(t.inflate())}),n.run(),n.promise.then(function(){return data})},$deflate:function(){var n=[],o=new t;return bMoor.loop(this,function(t,i){bMoor.isFunction(t.deflate)?o.add(t.deflate().then(function(t){n[i]=t})):n[i]=t}),o.run(),o.promise.then(function(){return n})}}}}]);
}());